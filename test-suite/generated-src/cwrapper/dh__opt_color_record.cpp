// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from enum.djinni

#include <iostream> // for debugging
#include <cassert>
#include "wrapper_marshal.hpp"
#include "opt_color_record.hpp"

#include "color.hpp"
#include "dh__color.hpp"
#include "dh__opt_color_record.hpp"
#include <experimental/optional>

static void(*s_py_callback_opt_color_record___delete)(DjinniRecordHandle * );
void opt_color_record_add_callback___delete(void(* ptr)(DjinniRecordHandle * )) {
    s_py_callback_opt_color_record___delete = ptr;
}

void opt_color_record___delete(DjinniRecordHandle * drh) {
    s_py_callback_opt_color_record___delete(drh);
}
void optional_opt_color_record___delete(DjinniOptionalRecordHandle * drh) {
    s_py_callback_opt_color_record___delete((DjinniRecordHandle *) drh); // can't static cast, find better way
}
static int ( * s_py_callback_opt_color_record_get_opt_color_record_f1)(DjinniRecordHandle *);

void opt_color_record_add_callback_get_opt_color_record_f1(int( * ptr)(DjinniRecordHandle *)) {
    s_py_callback_opt_color_record_get_opt_color_record_f1 = ptr;
}

static DjinniRecordHandle * ( * s_py_callback_opt_color_record_python_create_opt_color_record)(int);

void opt_color_record_add_callback_python_create_opt_color_record(DjinniRecordHandle *( * ptr)(int)) {
    s_py_callback_opt_color_record_python_create_opt_color_record = ptr;
}

djinni::Handle<DjinniRecordHandle> DjinniOptColorRecord::fromCpp(const ::testsuite::OptColorRecord& dr) {

    djinni::Handle<DjinniRecordHandle> _aux(
        s_py_callback_opt_color_record_python_create_opt_color_record(
            int32_from_enum_color(dr.my_color)),
        opt_color_record___delete);
    return _aux;
}

::testsuite::OptColorRecord DjinniOptColorRecord::toCpp(djinni::Handle<DjinniRecordHandle> dh) {

    auto _aux = ::testsuite::OptColorRecord(
        get_boxed_enum_color_from_int32(s_py_callback_opt_color_record_get_opt_color_record_f1(dh.get())));
    return _aux;
}

djinni::Handle<DjinniOptionalRecordHandle> DjinniOptColorRecord::fromCpp(std::experimental::optional<::testsuite::OptColorRecord> dc) {
    if (dc == std::experimental::nullopt) {
        return nullptr;
    }
    return djinni::optionals::toOptionalHandle(std::move(DjinniOptColorRecord::fromCpp(std::move(* dc))), optional_opt_color_record___delete);
}

std::experimental::optional<::testsuite::OptColorRecord>DjinniOptColorRecord::toCpp(djinni::Handle<DjinniOptionalRecordHandle> dh) {
     if (dh) {
        return std::experimental::optional<::testsuite::OptColorRecord>(DjinniOptColorRecord::toCpp(djinni::optionals::fromOptionalHandle(std::move(dh), opt_color_record___delete)));
    }
    return std::experimental::nullopt;
}

